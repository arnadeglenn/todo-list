(()=>{"use strict";class t{constructor(t,e,d){this.listItem=t,this.date=e,this.dataIndex=d}}const e=[new t("Example To-Do","2023-10-14","0"),new t("Example To-Do 2","2023-10-15","1")],d=document.querySelector(".list-items");let n=function(){for(let t=0;t<e.length;t++){const n=document.createElement("div");n.classList.add("list-item"),n.setAttribute("data-index",`${t}`),d.appendChild(n);const s=document.createElement("div");s.classList.add("checkbox"),n.appendChild(s);const i=document.createElement("input");i.classList.add("to-do-input"),i.setAttribute("type","text"),i.setAttribute("placeholder","Example Item"),i.setAttribute("data-index",`${t}`),i.value=e[t].listItem,n.appendChild(i);const a=document.createElement("div");a.classList.add("icon-box"),n.appendChild(a);const o=document.createElement("input");o.classList.add("date-input"),o.setAttribute("type","date"),o.setAttribute("data-index",`${t}`),o.value=e[t].date,a.appendChild(o);const c=document.createElementNS("http://www.w3.org/2000/svg","svg");c.classList.add("edit-svg"),c.setAttribute("xmlns","http://www.w3.org/2000/svg"),c.setAttribute("viewBox","0 0 24 24"),c.innerHTML="<title>pencil</title><path d='M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z' />",a.appendChild(c);const l=document.createElementNS("http://www.w3.org/2000/svg","svg");l.classList.add("delete-svg"),l.setAttribute("xmlns","http://www.w3.org/2000/svg"),l.setAttribute("viewBox","0 0 24 24"),l.innerHTML="<title>trash-can-outline</title><path d='M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z' />",a.appendChild(l)}};const s=document.getElementById("project-addition");document.getElementById("add-project-button").addEventListener("click",(t=>{s.showModal()}));const i=document.querySelector(".add-item-js"),a=document.querySelector(".list-items");let o=e.length;i.addEventListener("click",(s=>{!function(t){const e=document.createElement("div");e.classList.add("list-item"),e.classList.add("add-to-do-modal"),e.setAttribute("data-index",`${t}`),d.appendChild(e);const n=document.createElement("div");n.classList.add("checkbox"),e.appendChild(n);const s=document.createElement("input");s.classList.add("to-do-input"),s.classList.add("add-to-do-input"),s.setAttribute("type","text"),s.setAttribute("placeholder","What Do You Need to Do?"),s.setAttribute("data-index",`${t}`),e.appendChild(s);const i=document.createElement("div");i.classList.add("icon-box"),e.appendChild(i);const a=document.createElement("input");a.classList.add("date-input"),a.classList.add("add-to-do-date"),a.setAttribute("type","date"),a.setAttribute("data-index",`${t}`),a.value=function(){let t=new Date,e=t.getDate(),d=t.getMonth()+1;return e<10&&(e="0"+e),d<10&&(d="0"+e),`${e}/${d}/${t.getFullYear()}`}(),i.appendChild(a);const o=document.createElement("button");o.classList.add("submit-button"),o.setAttribute("type","submit"),o.setAttribute("data-index",`${t}`),o.setAttribute("id","to-do-submit"),o.innerHTML="Submit",i.appendChild(o);const c=document.createElement("button");c.classList.add("cancel-button"),c.setAttribute("type","submit"),c.setAttribute("id","to-do-cancel"),c.innerHTML="Cancel",i.appendChild(c)}(o);const i=document.querySelector(".add-to-do-input"),c=document.querySelector(".submit-button");i.focus(),c.addEventListener("click",(d=>{!function(d){const n=document.querySelector(`.add-to-do-input[data-index="${d}"]`),s=document.querySelector(`.add-to-do-date[data-index="${d}"]`);let i=n.value,a=s.value,o=e.length,c=new t(i,a,o);e.push(c)}(o),a.innerHTML="",n(),console.log(e)}))})),n()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,